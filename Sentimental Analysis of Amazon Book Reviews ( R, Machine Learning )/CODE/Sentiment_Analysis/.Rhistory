sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)-1
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
err.dnn.small
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
yy.dnn.small
round(yy.dnn.small)
summary(err.dnn.small)
summary(yy.dnn.small)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("a-sparseMatrix.csv")
data.dbn.sentiment<-read.csv("a-sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train_y
sentiment_train_y.y<-as.matrix(sentiment_train_y)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
library(deepnet)
# We are setting the path for the directory
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
# we are loading the data into a dataframe
data.dbn.sparse <-read.csv("a-sparseMatrix.csv")
data.dbn.sentiment<-read.csv("a-sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train$review_decision_p<- 0
sentiment_train$review_decision_n<- 0
sentiment_train$review_decision_ne<- 0
sentiment_train$review_decision_p<- 0
sentiment_train$review_decision_n<- 0
sentiment_train$review_decision_ne<- 0
sentiment_train$review_decision_p[sentiment_train$review_decision== "positive"] <-1
sentiment_train$review_decision_n[sentiment_train$review_decision== "negative"] <-1
sentiment_train$review_decision_ne[sentiment_train$review_decision== "netural"] <-1
sentiment_train_y.y<-as.matrix(sentiment_train$review_decision_p,sentiment_train$review_decision_n,sentiment_train$review_decision_ne)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y$review_decision_p<- 0
sentiment_test_y$review_decision_n<- 0
sentiment_test$review_decision_p<- 0
sentiment_test_y<-sentiment_test$review_decision
sentiment_test$review_decision_p<- 0
sentiment_test$review_decision_n<- 0
sentiment_test$review_decision_ne<- 0
sentiment_test_y$review_decision_p[sentiment_test$review_decision== "positive"] <-1
sentiment_test$review_decision
sentiment_test_y$review_decision_p<- 0
sentiment_test_y$review_decision_n<- 0
sentiment_test_y$review_decision_ne<- 0
sentiment_test_y$review_decision_p[sentiment_test$review_decision== "positive"] <-1
sentiment_test_y$review_decision_n[sentiment_test$review_decision== "negative"] <-1
sentiment_test_y$review_decision_ne[sentiment_test$review_decision== "netural"] <-1
sentiment_test_y.y <- as.matrix(sentiment_test_y$review_decision_p,sentiment_test_y$review_decision_n,sentiment_test_y$review_decision_ne)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
err.dnn.small
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(yy.dnn.small)
table(yy.dnn.small, test.y)
summary(err.dnn.small)
yy.dnn.small
accuracy(sentiment_test_y.y,yy.dnn.small,0.69)
confusion.matrix(sentiment_test_y.y,yy.dnn.small,threshold=0.7)
install.packages("Lahman")
install.packages("SDMTools")
library(Lahman)
library(SDMTools)
library(caret)
library(deepnet)
confusion.matrix(sentiment_test_y.y,yy.dnn.small,threshold=0.7)
confusion.matrix(yy.dnn.small,sentiment_test_y.y,threshold=0.7)
confusion.matrix(yy.dnn.small,sentiment_test_y.y,threshold=0.7)
view(sentiment_test_y.y)
View(sentiment_test)
View(sentiment_test_y.y)
View(sentiment_train)
View(sentiment_train_y.y)
View(sentiment_train)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("a-sparseMatrix.csv")
data.dbn.sentiment<-read.csv("a-sentiment_label_reviews.csv")
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
View(sparse_train)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
View(sparse_train_x)
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train$review_decision_p<- 0
sentiment_train$review_decision_n<- 0
sentiment_train$review_decision_ne<- 0
sentiment_train$review_decision_p[sentiment_train$review_decision== "positive"] <-1
sentiment_train$review_decision_n[sentiment_train$review_decision== "negative"] <-1
sentiment_train$review_decision_ne[sentiment_train$review_decision== "netural"] <-1
sentiment_train_y.y<-as.matrix(sentiment_train$review_decision_p,sentiment_train$review_decision_n,sentiment_train$review_decision_ne)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test$review_decision_p<- 0
sentiment_test$review_decision_n<- 0
sentiment_test$review_decision_ne<- 0
sentiment_test$review_decision_p[sentiment_test$review_decision== "positive"] <-1
sentiment_test$review_decision_n[sentiment_test$review_decision== "negative"] <-1
sentiment_test$review_decision_ne[sentiment_test$review_decision== "netural"] <-1
sentiment_test_y.y <- as.matrix(sentiment_test$review_decision_p,sentiment_test$review_decision_n,sentiment_test$review_decision_ne)
View(sentiment_test_y.y)
View(sentiment_train_y.y)
View(sentiment_train)
View(sentiment_test)
sentiment_test_y.y <- c(sentiment_test$review_decision_p,sentiment_test$review_decision_n,sentiment_test$review_decision_ne)
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
View(sentiment_test_y.y)
sentiment_test_y.y <- c(sentiment_test$review_decision_p,sentiment_test$review_decision_n,sentiment_test$review_decision_ne)
sentiment_test_y.y
View(sentiment_train_y.y)
sentiment_test_y.y <- cbind(sentiment_test$review_decision_p,sentiment_test$review_decision_n,sentiment_test$review_decision_ne)
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
View(sentiment_test_y.y)
sentiment_train_y.y<-cbind(sentiment_train$review_decision_p,sentiment_train$review_decision_n,sentiment_train$review_decision_ne)
sentiment_train_y.y<- as.matrix(sentiment_train_y.y<-)
sentiment_train_y.y<- as.matrix(sentiment_train_y.y)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
summary(err.dnn.small)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(yy.dnn.small)
table(yy.dnn.small, test.y)
accuracy(tes_decision,predictions,0.69)
confusion.matrix(sentiment_test_y.y,yy.dnn.small,threshold=0.7)
confusion.matrix(sentiment_test_y.y,yy.dnn.small)
table(sentiment_test_y.y,yy.dnn.small)
table(yy.dnn.small,sentiment_test_y.y)
summary(err.dnn.small)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(yy.dnn.small)
library(deepnet)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("A--sparseMatrix.csv")
data.dbn.sentiment<-read.csv("A--sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train_y.y<-as.matrix(as.numeric(sentiment_train_y)-1)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)-1
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
err.dnn.small
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(err.dnn.small)
summary(yy.dnn.small)
table(yy.dnn.small, test.y)
accuracy(tes_decision,predictions,0.69)
confusion.matrix(sentiment_test_y.y,yy.dnn.small)
table(yy.dnn.small,sentiment_test_y.y)
table(round(yy.dnn.small),sentiment_test_y.y)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("A--sparseMatrix.csv")
data.dbn.sentiment<-read.csv("A--sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-sparse_train_data[,-1]
sparse_test_x<-sparse_test_data[,-1]
sentiment_train_y<-sentiment_train$final_decision
sentiment_train_y.y<-as.numeric(sentiment_train_y)-1
sentiment_test_y<-sentiment_test$final_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)-1
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
# we are loading the data into a dataframe
data.dbn.sparse <-read.csv("A--sparseMatrix.csv")
data.dbn.sentiment<-read.csv("A--sentiment_label_reviews.csv")
#data.dbn.sparse<-data.frame(data.dbn.sparse)
#data.dbn.sentiment<-data.frame(data.dbn.sentiment)
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
#samplizing<-sample(1,nrow(data.dbn.sentiment),replace = TRUE, prob = 0.8)
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
#nrow(sparse_train)
#nrow(sparse_test)
#nrow(sentiment_train)
#nrow(sentiment_test)
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-sparse_train_data[,-1]
sparse_test_x<-sparse_test_data[,-1]
#nrow(sparse_train_x)
#nrow(sparse_test_x)
#sentiment_train_data<-data.matrix(sentiment_train)
#sentiment_test_data<-data.matrix(sentiment_test)
#nrow(sentiment_test_data)
#nrow(sentiment_train_data)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train_y.y<-as.numeric(sentiment_train_y)-1
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)-1
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(300,300,300), numepochs = 2, cd=2)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
yy.dnn.small
summary(err.dnn.small)
summary(yy.dnn.small)
table(round(yy.dnn.small),sentiment_test_y.y)
accuracy(sentiment_test_y.y,yy.dnn.small,0.69)
library(Lahman)
library(SDMTools)
library(caret)
confusion.matrix(sentiment_test_y.y,yy.dnn.small)
library(Lahman)
library(SDMTools)
library(caret)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('A--sparseMatrix.csv')
trainData <- review[1:2500,]
testData <- review[2501:5001,]
x <- as.matrix(trainData[,])
y <- as.matrix(trainData$review_decision)
tes<-as.matrix(testData[,])
y <- as.matrix(trainData$review_decision)
trainData$review_decision
y <- as.matrix(trainData$decision)
tes<-as.matrix(testData[,])
tes_decision<-as.matrix(testData$decision)
dbn <- dbn.dnn.train(x, y, hidden = c(3,3), activationfun = "sigm", output = "sigm", numepochs = 100, cd=2)
dbn <- dbn.dnn.train(x, y, hidden = c(3,3), numepochs = 100, cd=2)
dnn <- dbn.dnn.train(x, y, hidden = c(3,3,3), numepochs = 2, cd=2)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
# we are loading the data into a dataframe
data.dbn.sparse <-read.csv("A--sparseMatrix.csv")
data.dbn.sentiment<-read.csv("A--sentiment_label_reviews.csv")
#data.dbn.sparse<-data.frame(data.dbn.sparse)
#data.dbn.sentiment<-data.frame(data.dbn.sentiment)
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
#samplizing<-sample(1,nrow(data.dbn.sentiment),replace = TRUE, prob = 0.8)
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
#nrow(sparse_train)
#nrow(sparse_test)
#nrow(sentiment_train)
#nrow(sentiment_test)
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-sparse_train_data[,-1]
sparse_test_x<-sparse_test_data[,-1]
#nrow(sparse_train_x)
#nrow(sparse_test_x)
#sentiment_train_data<-data.matrix(sentiment_train)
#sentiment_test_data<-data.matrix(sentiment_test)
#nrow(sentiment_test_data)
#nrow(sentiment_train_data)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train_y.y<-as.numeric(sentiment_train_y)-1
sentiment_test_y<-sentiment_test$review_decision
sentiment_test_y.y<-as.numeric(sentiment_test_y)-1
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3),activationfun = "sigm", output = "sigm", numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(yy.dnn.small)
summary(err.dnn.small)
confusion.matrix(sentiment_test_y.y,yy.dnn.small)
confusion.matrix(sentiment_train_y.y,yy.dnn.small)
sentiment_test_y.y
accuracy(sentiment_test_y.y,yy.dnn.small,0.69)
confusion.matrix(sentiment_test_y.y,yy.dnn.small)
confusion.matrix(sentiment_test_y.y,round(yy.dnn.small))
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
r <- round(yy.dnn.small)
confusion.matrix(sentiment_test_y.y,r)
confusion.matrix(r,sentiment_test_y.y)
accuracy(sentiment_test_y.y,r,0.69)
accuracy(r,sentiment_test_y.y,0.69)
confusion.matrix(unlist(r),unlist(sentiment_test_y.y))
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("a-sparseMatrix.csv")
data.dbn.sentiment<-read.csv("a-sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train$review_decision_p<- 0
sentiment_train$review_decision_n<- 0
sentiment_train$review_decision_ne<- 0
sentiment_train$review_decision_p[sentiment_train$review_decision== "positive"] <-1
sentiment_train$review_decision_n[sentiment_train$review_decision== "negative"] <-1
sentiment_train$review_decision_ne[sentiment_train$review_decision== "netural"] <-1
sentiment_train_y.y<-cbind(sentiment_train$review_decision_p,sentiment_train$review_decision_n,sentiment_train$review_decision_ne)
sentiment_train_y.y<- as.matrix(sentiment_train_y.y)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test$review_decision_p<- 0
sentiment_test$review_decision_n<- 0
sentiment_test$review_decision_ne<- 0
sentiment_test$review_decision_p[sentiment_test$review_decision== "positive"] <-1
sentiment_test$review_decision_n[sentiment_test$review_decision== "negative"] <-1
sentiment_test$review_decision_ne[sentiment_test$review_decision== "netural"] <-1
sentiment_test_y.y <- cbind(sentiment_test$review_decision_p,sentiment_test$review_decision_n,sentiment_test$review_decision_ne)
sentiment_test_y.y <- as.matrix(sentiment_test_y.y)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
summary(err.dnn.small)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
summary(yy.dnn.small)
accuracy(r,sentiment_test_y.y,0.69)
confusion.matrix(unlist(r),unlist(sentiment_test_y.y))
r <- round(yy.dnn.small)
accuracy(r,sentiment_test_y.y,0.69)
confusion.matrix(unlist(r),unlist(sentiment_test_y.y))
View(sentiment_train_y.y)
summary(yy.dnn.small)
confusion.matrix(unlist(r),unlist(sentiment_test_y.y))
sentiment_test_y.y
r
View(r)
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
data.dbn.sparse <-read.csv("a-sparseMatrix.csv")
data.dbn.sentiment<-read.csv("a-sentiment_label_reviews.csv")
samplizing<-sample(1:nrow(data.dbn.sparse),round(0.9*nrow(data.dbn.sparse)))
sparse_train<-data.dbn.sparse[samplizing,]
sparse_test<-data.dbn.sparse[-samplizing,]
sentiment_train<-data.dbn.sentiment[samplizing,]
sentiment_test<-data.dbn.sentiment[-samplizing,]
sparse_train_data<-data.matrix(sparse_train)
sparse_test_data<-data.matrix(sparse_test)
sparse_train_x<-as.matrix(sparse_train_data[,-1])
sparse_test_x<-sparse_test_data[,-1]
sparse_test_x <- as.matrix(sparse_test_x)
sentiment_train_y<-sentiment_train$review_decision
sentiment_train$review_decision_p<- 0
sentiment_train$review_decision_p[sentiment_train$review_decision== "positive"] <-1
sentiment_train$review_decision_p[sentiment_train$review_decision== "negative"] <-0
sentiment_train$review_decision_p[sentiment_train$review_decision== "netural"] <- -1
sentiment_train_y.y<- as.matrix(sentiment_train$review_decision_p)
sentiment_test_y<-sentiment_test$review_decision
sentiment_test$review_decision_p<- 0
sentiment_test$review_decision_p[sentiment_test$review_decision== "positive"] <-1
sentiment_test$review_decision_p[sentiment_test$review_decision== "negative"] <-0
sentiment_test$review_decision_p[sentiment_test$review_decision== "netural"] <- -1
sentiment_test_y.y <- as.matrix(sentiment_test$review_decision_p)
dnn <- dbn.dnn.train(sparse_train_x, sentiment_train_y.y, hidden = c(3,3,3), numepochs = 2, cd=2)
err.dnn.small<-nn.test(dnn,sparse_test_x,sentiment_test_y.y)
summary(err.dnn.small)
yy.dnn.small<-nn.predict(dnn, sparse_test_x)
r <- round(yy.dnn.small)
accuracy(r,sentiment_test_y.y,0.69)
confusion.matrix(unlist(r),unlist(sentiment_test_y.y))
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('A--sparseMatrix.csv')
trainData <- review[1:3500,]
testData <- review[3501:5001,]
x <- as.matrix(trainData[,])
y <- as.matrix(trainData$decision)
tes<-as.matrix(testData[,])
tes_decision<-as.matrix(testData$decision)
x <- as.matrix(trainData[,1:4947])
y <- as.matrix(trainData$decision)
tes<-as.matrix(testData[,1:4947])
tes_decision<-as.matrix(testData$decision)
dnn <- dbn.dnn.train(x, y, hidden = c(3,3,3), numepochs = 2, cd=2)
x <- as.matrix(trainData[,2:4947])
y <- as.matrix(trainData$decision)
tes<-as.matrix(testData[,2:4947])
tes_decision<-as.matrix(testData$decision)
dnn <- dbn.dnn.train(x, y, hidden = c(3,3,3), numepochs = 2, cd=2)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('A--sparseMatrix.csv')
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
library(deepnet)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('A--sparseMatrix.csv')
trainData <- review[1:3500,]
testData <- review[3501:5001,]
x <- as.matrix(trainData[,2:4947])
y <- as.matrix(trainData$decision)
tes<-as.matrix(testData[,2:4947])
tes_decision<-as.matrix(testData$decision)
dnn <- dbn.dnn.train(x, y, hidden = c(3,3,3), numepochs = 2, cd=2)
predictions = nn.predict(dbn, tes)
predictions = nn.predict(dnn, tes)
errorRate = nn.test(dbn, tes, tes_decision)
errorRate = nn.test(dnn, tes, tes_decision)
errorRate
confusion.matrix(unlist(tes_decision),unlist(predictions),threshold=0.7)
confusion.matrix(unlist(predictions),unlist(tes_decision),threshold=0.7)
confusion.matrix(unlist(round(tes_decision)),unlist(round(predictions)),threshold=0.7)
confusion.matrix(unlist(round(predictions)),unlist(round(tes_decision)),threshold=0.7)
dnn <- dbn.dnn.train(x, y, hidden = c(500,500), numepochs = 2, cd=2)
predictions = nn.predict(dnn, tes)
confusion.matrix(unlist(round(predictions)),unlist(round(tes_decision)),threshold=0.7)
confusion.matrix(unlist(round(predictions)),unlist(round(tes_decision)))
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('final_temp1.csv')
trainData <- review[1:4000,]
testData <- review[4001:5000,]
x <- as.matrix(trainData[,2:6250])
y <- as.matrix(trainData$RESULT)
tes<-as.matrix(testData[,2:6250])
tes_decision<-as.matrix(testData$RESULT)
dnn <- dbn.dnn.train(x, y, hidden = c(500,500), numepochs = 2, cd=2)
predictions = nn.predict(dnn, tes)
confusion.matrix(unlist(round(predictions)),unlist(round(tes_decision)))
accuracy(predictions,tes_decision,0.69)
accuracy(tes_decision,predictions,0.69)
accuracy(round(tes_decision),round(predictions),0.69)
accuracy(round(predictions),round(tes_decision),0.69)
summary(errorRate)
library(XLConnect)
library(forecast)
library(caret)
library(e1071)
# We are setting the path for the directory
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
# we are loading the data into a dataframe
sparse_representation <-read.csv("a-sparseMatrix.csv")
#label_reviews <-read.csv("a-sentiment_label_reviews.csv")
data = data.frame(sparse_representation)
data$X <- NULL
sample_index = sample(3500, 3000)
test_dateset = data[sample_index,]
train_dateset = data[-sample_index,]
x <- subset(train_dateset, select=-decision)
y <- train_dateset$decision
#We are building a simple model
#We are taking upo the sample data and buing the model so that we can use it for tuning the cost , gamma and kernel
model = svm(decision  ~ ., kernel ="linear",data = train_dateset, scale = F)
#We are predicting our testdata set using the  simple model (Which is not tuned )
predictionslinear <-  predict(model, test_dateset)
#We are plotting a confusion matrix of the predicted table .
table(test_dateset$decision, predictionslinear)
#predictionslinear
#           negative netural positive
#negative      953     143      234
#netural       123      93      150
#positive      270     100      934
model = svm(decision  ~ ., kernel ="linear",data = train_dateset, scale = F)
setwd("E:\\NEU_MIS\\Spring_2016\\INFO_7390_Advance_Data_Science\\final_project\\Sentiment_Analysis\\Final Project")
review <- read.csv('final_temp1.csv')
x <- as.matrix(trainData[,2:6250])
y <- as.matrix(trainData$RESULT)
tes<-as.matrix(testData[,2:6250])
tes_decision<-as.matrix(testData$RESULT)
dnn <- dbn.dnn.train(x, y, hidden = c(500,500),  activationfun = "sigm", output = "sigm",numepochs = 2, cd=2)
predictions = nn.predict(dnn, tes)
errorRate = nn.test(dnn, tes, tes_decision)
errorRate
summary(errorRate)
accuracy(round(predictions),round(tes_decision),0.69)
confusion.matrix(unlist(round(predictions)),unlist(round(tes_decision)))
